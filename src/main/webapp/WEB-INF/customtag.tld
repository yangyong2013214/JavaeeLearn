<?xml version="1.0" encoding="utf-8" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee" version="2.0">
    <tlib-version>1.0</tlib-version>
    <short-name>CustomTagLibrary</short-name>
    <!--
         为自定义标签库设置一个uri，uri以/开头，/后面的内容随便写，如这里的/gacl ，
         在Jsp页面中引用标签库时，需要通过uri找到标签库
         在Jsp页面中就要这样引入标签库：<%@taglib uri="/customtag" prefix="customtag"%>
     -->
    <uri>/yctag</uri>
    <!--一个taglib(标签库)中包含多个自定义标签，每一个自定义标签使用一个tag标记来描述  -->
    <!-- 一个tag标记对应一个自定义标签 -->
    <tag>
        <!--
             为标签处理器类配一个标签名，在Jsp页面中使用标签时是通过标签名来找到要调用的标签处理器类的
             通过viewIP就能找到对应的com.yckjsoft.javaee.customtag.ViewIPTag类
          -->
        <name>viewIP</name>
        <!-- 标签对应的处理器类-->
        <tag-class>com.yckjsoft.javaee.customtag.ViewIPTag</tag-class>
        <body-content>empty</body-content>
    </tag>

    <tag>
        <name>tagDemo1</name>
        <tag-class>com.yckjsoft.javaee.customtag.TagDemo1</tag-class>
        <!--demo1标签有标签体，所以这里的body-content设置为JSP-->
        <body-content>JSP</body-content>
    </tag>

    <tag>
        <name>tagDemo2</name>
        <tag-class>com.yckjsoft.javaee.customtag.TagDemo2</tag-class>
        <!--demo2标签没有标签体，所以这里的body-content设置为empty-->
        <body-content>empty</body-content>
    </tag>

    <tag>
        <name>tagDemo3</name>
        <tag-class>com.yckjsoft.javaee.customtag.TagDemo3</tag-class>
        <!--demo3标签有标签体，所以这里的body-content设置为JSP-->
        <body-content>JSP</body-content>
    </tag>

    <tag>
        <name>tagDemo4</name>
        <tag-class>com.yckjsoft.javaee.customtag.TagDemo4</tag-class>
        <!--demo4标签有标签体，所以这里的body-content设置为JSP-->
        <body-content>JSP</body-content>
    </tag>

    <!--一个taglib(标签库)中包含多个自定义标签，每一个自定义标签使用一个tag标记来描述  -->
    <!-- 一个tag标记对应一个自定义标签 -->
    <tag>
        <!--
            为标签处理器类配一个标签名，在Jsp页面中使用标签时是通过标签名来找到要调用的标签处理器类的
            通过demo1就能找到对应的com.yckjsoft.javaee.customtag.SimpleTagDemo1类
         -->
        <name>simpleTagDemo1</name>
        <!-- 标签对应的处理器类-->
        <tag-class>com.yckjsoft.javaee.customtag.SimpleTagDemo1</tag-class>
        <!--
             tld文件中有四种标签体类型 ：empty  JSP  scriptless  tagdepentend
            在简单标签(SampleTag)中标签体body-content的值只允许是empty和scriptless，不允许设置成JSP,如果设置成JSP就会出现异常
            在传统标签中标签体body-content的值只允许是empty和JSP
            如果标签体body-content的值设置成tagdepentend，那么就表示标签体里面的内容是给标签处理器类使用的，
            例如：开发一个查询用户的sql标签，此时标签体重的SQL语句就是给SQL标签的标签处理器来使用的
            <gacl:sql>SELECT * FROM USER</gacl:sql>
            在这种情况下，sql标签的<body-content>就要设置成tagdepentend，tagdepentend用得比较少，了解一下即可
        -->
        <body-content>scriptless</body-content>
    </tag>
    <tag>
        <name>simpleTagDemo2</name>
        <!-- 标签对应的处理器类-->
        <tag-class>com.yckjsoft.javaee.customtag.SimpleTagDemo2</tag-class>
        <!-- 标签体允许的内容 ，scriptless表示标签体的内容不允许是java脚本代码-->
        <body-content>scriptless</body-content>
    </tag>

    <tag>
        <name>simpleTagDemo3</name>
        <!-- 标签对应的处理器类-->
        <tag-class>com.yckjsoft.javaee.customtag.SimpleTagDemo3</tag-class>
        <!-- 标签体允许的内容 ，scriptless表示标签体的内容不允许是java脚本代码-->
        <body-content>scriptless</body-content>
    </tag>

    <tag>
        <name>simpleTagDemo4</name>
        <!-- 标签对应的处理器类-->
        <tag-class>com.yckjsoft.javaee.customtag.SimpleTagDemo4</tag-class>
        <!-- 标签体允许的内容 ，empty表示该标签没有标签体-->
        <body-content>empty</body-content>
    </tag>

    <tag>
        <name>simpleTagDemo5</name>
        <!-- 标签对应的处理器类-->
        <tag-class>com.yckjsoft.javaee.customtag.SimpleTagDemo5</tag-class>
        <!-- 标签体允许的内容 ，scriptless表示标签体的内容不允许是java脚本代码-->
        <body-content>scriptless</body-content>
        <!-- 标签的属性描述 -->
        <attribute>
            <!-- 标签的count属性 -->
            <name>count</name>
            <required>true</required>
            <!-- rtexprvalue用来指示标签的属性值是否可以是一个表达式，
             一般设置为true,true就表示允许标签的属性值可以是一个表达式-->
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>

    <tag>
        <name>simpleTagDemo6</name>
        <!-- 标签对应的处理器类-->
        <tag-class>com.yckjsoft.javaee.customtag.SimpleTagDemo6</tag-class>
        <!-- 标签体允许的内容 ，empty表示该标签没有标签体-->
        <body-content>empty</body-content>
        <!-- 标签的属性描述 -->
        <attribute>
            <!-- 标签的date属性 -->
            <name>date</name>
            <required>true</required>
            <!-- rtexprvalue用来指示标签的属性值是否可以是一个表达式，
             一般设置为true,true就表示允许标签的属性值可以是一个表达式-->
            <rtexprvalue>true</rtexprvalue>
        </attribute>
    </tag>
</taglib>